name: Frontend CI Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'Frontend/**'
  pull_request:
    branches:
      - main
    paths:
      - 'Frontend/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-frontend

jobs:
  test-frontend:
    name: Run Frontend Tests
    runs-on: ubuntu-latest
    # Tests se ejecutan SIEMPRE (en PR y en push)
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Node.js dependencies
        run: |
          cd Frontend
          npm install

      - name: Run Jest tests
        run: |
          cd Frontend
          npm test

  build-and-push-frontend:
    name: Build and Push Frontend Image
    runs-on: ubuntu-latest
    needs: test-frontend  # Solo ejecuta si los tests pasan
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'  # Solo en push a main, no en PR

    permissions:
      contents: read
      packages: write

    steps:
      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v3

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        env:
          SHORT_SHA: ${{ steps.commit.outputs.short }}
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ steps.commit.outputs.short }}
            latest

      - name: Build, tag and push frontend Docker image
        env:
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        uses: docker/build-push-action@v5
        with:
          context: ./Frontend
          dockerfile: ./Frontend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
